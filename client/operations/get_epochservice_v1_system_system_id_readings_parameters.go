// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetEpochserviceV1SystemSystemIDReadingsParams creates a new GetEpochserviceV1SystemSystemIDReadingsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetEpochserviceV1SystemSystemIDReadingsParams() *GetEpochserviceV1SystemSystemIDReadingsParams {
	return &GetEpochserviceV1SystemSystemIDReadingsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetEpochserviceV1SystemSystemIDReadingsParamsWithTimeout creates a new GetEpochserviceV1SystemSystemIDReadingsParams object
// with the ability to set a timeout on a request.
func NewGetEpochserviceV1SystemSystemIDReadingsParamsWithTimeout(timeout time.Duration) *GetEpochserviceV1SystemSystemIDReadingsParams {
	return &GetEpochserviceV1SystemSystemIDReadingsParams{
		timeout: timeout,
	}
}

// NewGetEpochserviceV1SystemSystemIDReadingsParamsWithContext creates a new GetEpochserviceV1SystemSystemIDReadingsParams object
// with the ability to set a context for a request.
func NewGetEpochserviceV1SystemSystemIDReadingsParamsWithContext(ctx context.Context) *GetEpochserviceV1SystemSystemIDReadingsParams {
	return &GetEpochserviceV1SystemSystemIDReadingsParams{
		Context: ctx,
	}
}

// NewGetEpochserviceV1SystemSystemIDReadingsParamsWithHTTPClient creates a new GetEpochserviceV1SystemSystemIDReadingsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetEpochserviceV1SystemSystemIDReadingsParamsWithHTTPClient(client *http.Client) *GetEpochserviceV1SystemSystemIDReadingsParams {
	return &GetEpochserviceV1SystemSystemIDReadingsParams{
		HTTPClient: client,
	}
}

/*
GetEpochserviceV1SystemSystemIDReadingsParams contains all the parameters to send to the API endpoint

	for the get epochservice v1 system system ID readings operation.

	Typically these are written to a http.Request.
*/
type GetEpochserviceV1SystemSystemIDReadingsParams struct {

	/* EndDate.

	   End date in 'YYYY-MM-DD' format (e.g., '2025-02-01').

	   Format: date
	*/
	EndDate strfmt.Date

	/* StartDate.

	   Start date in 'YYYY-MM-DD' format (e.g., '2025-01-01').

	   Format: date
	*/
	StartDate strfmt.Date

	/* SystemID.

	   Unique identifier for the system.
	*/
	SystemID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get epochservice v1 system system ID readings params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) WithDefaults() *GetEpochserviceV1SystemSystemIDReadingsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get epochservice v1 system system ID readings params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) WithTimeout(timeout time.Duration) *GetEpochserviceV1SystemSystemIDReadingsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) WithContext(ctx context.Context) *GetEpochserviceV1SystemSystemIDReadingsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) WithHTTPClient(client *http.Client) *GetEpochserviceV1SystemSystemIDReadingsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndDate adds the endDate to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) WithEndDate(endDate strfmt.Date) *GetEpochserviceV1SystemSystemIDReadingsParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) SetEndDate(endDate strfmt.Date) {
	o.EndDate = endDate
}

// WithStartDate adds the startDate to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) WithStartDate(startDate strfmt.Date) *GetEpochserviceV1SystemSystemIDReadingsParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) SetStartDate(startDate strfmt.Date) {
	o.StartDate = startDate
}

// WithSystemID adds the systemID to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) WithSystemID(systemID string) *GetEpochserviceV1SystemSystemIDReadingsParams {
	o.SetSystemID(systemID)
	return o
}

// SetSystemID adds the systemId to the get epochservice v1 system system ID readings params
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) SetSystemID(systemID string) {
	o.SystemID = systemID
}

// WriteToRequest writes these params to a swagger request
func (o *GetEpochserviceV1SystemSystemIDReadingsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param endDate
	qrEndDate := o.EndDate
	qEndDate := qrEndDate.String()
	if qEndDate != "" {

		if err := r.SetQueryParam("endDate", qEndDate); err != nil {
			return err
		}
	}

	// query param startDate
	qrStartDate := o.StartDate
	qStartDate := qrStartDate.String()
	if qStartDate != "" {

		if err := r.SetQueryParam("startDate", qStartDate); err != nil {
			return err
		}
	}

	// path param systemId
	if err := r.SetPathParam("systemId", o.SystemID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
