// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetAPIUserapiSystemSmets2LiveDataSystemIDReader is a Reader for the GetAPIUserapiSystemSmets2LiveDataSystemID structure.
type GetAPIUserapiSystemSmets2LiveDataSystemIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIUserapiSystemSmets2LiveDataSystemIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAPIUserapiSystemSmets2LiveDataSystemIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAPIUserapiSystemSmets2LiveDataSystemIDOK creates a GetAPIUserapiSystemSmets2LiveDataSystemIDOK with default headers values
func NewGetAPIUserapiSystemSmets2LiveDataSystemIDOK() *GetAPIUserapiSystemSmets2LiveDataSystemIDOK {
	return &GetAPIUserapiSystemSmets2LiveDataSystemIDOK{}
}

/*
GetAPIUserapiSystemSmets2LiveDataSystemIDOK describes a response with status code 200, with default header values.

Live energy data retrieved
*/
type GetAPIUserapiSystemSmets2LiveDataSystemIDOK struct {
	Payload *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody
}

// IsSuccess returns true when this get Api userapi system smets2 live data system Id o k response has a 2xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api userapi system smets2 live data system Id o k response has a 3xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api userapi system smets2 live data system Id o k response has a 4xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api userapi system smets2 live data system Id o k response has a 5xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api userapi system smets2 live data system Id o k response a status code equal to that given
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api userapi system smets2 live data system Id o k response
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) Code() int {
	return 200
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) Error() string {
	return fmt.Sprintf("[GET /api/userapi/system/smets2-live-data/{systemId}][%d] getApiUserapiSystemSmets2LiveDataSystemIdOK  %+v", 200, o.Payload)
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) String() string {
	return fmt.Sprintf("[GET /api/userapi/system/smets2-live-data/{systemId}][%d] getApiUserapiSystemSmets2LiveDataSystemIdOK  %+v", 200, o.Payload)
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) GetPayload() *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody {
	return o.Payload
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized creates a GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized with default headers values
func NewGetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized() *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized {
	return &GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized{}
}

/*
GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized struct {
}

// IsSuccess returns true when this get Api userapi system smets2 live data system Id unauthorized response has a 2xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api userapi system smets2 live data system Id unauthorized response has a 3xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api userapi system smets2 live data system Id unauthorized response has a 4xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api userapi system smets2 live data system Id unauthorized response has a 5xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api userapi system smets2 live data system Id unauthorized response a status code equal to that given
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Api userapi system smets2 live data system Id unauthorized response
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) Code() int {
	return 401
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/userapi/system/smets2-live-data/{systemId}][%d] getApiUserapiSystemSmets2LiveDataSystemIdUnauthorized ", 401)
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/userapi/system/smets2-live-data/{systemId}][%d] getApiUserapiSystemSmets2LiveDataSystemIdUnauthorized ", 401)
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAPIUserapiSystemSmets2LiveDataSystemIDNotFound creates a GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound with default headers values
func NewGetAPIUserapiSystemSmets2LiveDataSystemIDNotFound() *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound {
	return &GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound{}
}

/*
GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound describes a response with status code 404, with default header values.

System ID not found
*/
type GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound struct {
}

// IsSuccess returns true when this get Api userapi system smets2 live data system Id not found response has a 2xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api userapi system smets2 live data system Id not found response has a 3xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api userapi system smets2 live data system Id not found response has a 4xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api userapi system smets2 live data system Id not found response has a 5xx status code
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api userapi system smets2 live data system Id not found response a status code equal to that given
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get Api userapi system smets2 live data system Id not found response
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) Code() int {
	return 404
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/userapi/system/smets2-live-data/{systemId}][%d] getApiUserapiSystemSmets2LiveDataSystemIdNotFound ", 404)
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/userapi/system/smets2-live-data/{systemId}][%d] getApiUserapiSystemSmets2LiveDataSystemIdNotFound ", 404)
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody get API userapi system smets2 live data system ID o k body
swagger:model GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody
*/
type GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody struct {

	// power
	Power []*GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0 `json:"power"`
}

// Validate validates this get API userapi system smets2 live data system ID o k body
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePower(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody) validatePower(formats strfmt.Registry) error {
	if swag.IsZero(o.Power) { // not required
		return nil
	}

	for i := 0; i < len(o.Power); i++ {
		if swag.IsZero(o.Power[i]) { // not required
			continue
		}

		if o.Power[i] != nil {
			if err := o.Power[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getApiUserapiSystemSmets2LiveDataSystemIdOK" + "." + "power" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getApiUserapiSystemSmets2LiveDataSystemIdOK" + "." + "power" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get API userapi system smets2 live data system ID o k body based on the context it is used
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePower(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody) contextValidatePower(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Power); i++ {

		if o.Power[i] != nil {
			if err := o.Power[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getApiUserapiSystemSmets2LiveDataSystemIdOK" + "." + "power" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getApiUserapiSystemSmets2LiveDataSystemIdOK" + "." + "power" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetAPIUserapiSystemSmets2LiveDataSystemIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0 get API userapi system smets2 live data system ID o k body power items0
swagger:model GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0
*/
type GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0 struct {

	// type
	// Enum: [ELECTRICITY GAS_ENERGY]
	Type string `json:"type,omitempty"`

	// watts
	Watts int64 `json:"watts,omitempty"`
}

// Validate validates this get API userapi system smets2 live data system ID o k body power items0
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getApiUserapiSystemSmets2LiveDataSystemIdOKBodyPowerItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ELECTRICITY","GAS_ENERGY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getApiUserapiSystemSmets2LiveDataSystemIdOKBodyPowerItems0TypeTypePropEnum = append(getApiUserapiSystemSmets2LiveDataSystemIdOKBodyPowerItems0TypeTypePropEnum, v)
	}
}

const (

	// GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0TypeELECTRICITY captures enum value "ELECTRICITY"
	GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0TypeELECTRICITY string = "ELECTRICITY"

	// GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0TypeGASENERGY captures enum value "GAS_ENERGY"
	GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0TypeGASENERGY string = "GAS_ENERGY"
)

// prop value enum
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getApiUserapiSystemSmets2LiveDataSystemIdOKBodyPowerItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0) validateType(formats strfmt.Registry) error {
	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get API userapi system smets2 live data system ID o k body power items0 based on context it is used
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0) UnmarshalBinary(b []byte) error {
	var res GetAPIUserapiSystemSmets2LiveDataSystemIDOKBodyPowerItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
