// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostUsersserviceV2LoginReader is a Reader for the PostUsersserviceV2Login structure.
type PostUsersserviceV2LoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersserviceV2LoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUsersserviceV2LoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostUsersserviceV2LoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUsersserviceV2LoginOK creates a PostUsersserviceV2LoginOK with default headers values
func NewPostUsersserviceV2LoginOK() *PostUsersserviceV2LoginOK {
	return &PostUsersserviceV2LoginOK{}
}

/*
PostUsersserviceV2LoginOK describes a response with status code 200, with default header values.

Authentication successful
*/
type PostUsersserviceV2LoginOK struct {
	Payload *PostUsersserviceV2LoginOKBody
}

// IsSuccess returns true when this post usersservice v2 login o k response has a 2xx status code
func (o *PostUsersserviceV2LoginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post usersservice v2 login o k response has a 3xx status code
func (o *PostUsersserviceV2LoginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post usersservice v2 login o k response has a 4xx status code
func (o *PostUsersserviceV2LoginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post usersservice v2 login o k response has a 5xx status code
func (o *PostUsersserviceV2LoginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post usersservice v2 login o k response a status code equal to that given
func (o *PostUsersserviceV2LoginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post usersservice v2 login o k response
func (o *PostUsersserviceV2LoginOK) Code() int {
	return 200
}

func (o *PostUsersserviceV2LoginOK) Error() string {
	return fmt.Sprintf("[POST /usersservice/v2/login][%d] postUsersserviceV2LoginOK  %+v", 200, o.Payload)
}

func (o *PostUsersserviceV2LoginOK) String() string {
	return fmt.Sprintf("[POST /usersservice/v2/login][%d] postUsersserviceV2LoginOK  %+v", 200, o.Payload)
}

func (o *PostUsersserviceV2LoginOK) GetPayload() *PostUsersserviceV2LoginOKBody {
	return o.Payload
}

func (o *PostUsersserviceV2LoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostUsersserviceV2LoginOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersserviceV2LoginUnauthorized creates a PostUsersserviceV2LoginUnauthorized with default headers values
func NewPostUsersserviceV2LoginUnauthorized() *PostUsersserviceV2LoginUnauthorized {
	return &PostUsersserviceV2LoginUnauthorized{}
}

/*
PostUsersserviceV2LoginUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostUsersserviceV2LoginUnauthorized struct {
}

// IsSuccess returns true when this post usersservice v2 login unauthorized response has a 2xx status code
func (o *PostUsersserviceV2LoginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post usersservice v2 login unauthorized response has a 3xx status code
func (o *PostUsersserviceV2LoginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post usersservice v2 login unauthorized response has a 4xx status code
func (o *PostUsersserviceV2LoginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post usersservice v2 login unauthorized response has a 5xx status code
func (o *PostUsersserviceV2LoginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post usersservice v2 login unauthorized response a status code equal to that given
func (o *PostUsersserviceV2LoginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post usersservice v2 login unauthorized response
func (o *PostUsersserviceV2LoginUnauthorized) Code() int {
	return 401
}

func (o *PostUsersserviceV2LoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /usersservice/v2/login][%d] postUsersserviceV2LoginUnauthorized ", 401)
}

func (o *PostUsersserviceV2LoginUnauthorized) String() string {
	return fmt.Sprintf("[POST /usersservice/v2/login][%d] postUsersserviceV2LoginUnauthorized ", 401)
}

func (o *PostUsersserviceV2LoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PostUsersserviceV2LoginBody post usersservice v2 login body
swagger:model PostUsersserviceV2LoginBody
*/
type PostUsersserviceV2LoginBody struct {

	// identity
	Identity string `json:"identity,omitempty"`

	// password
	Password string `json:"password,omitempty"`
}

// Validate validates this post usersservice v2 login body
func (o *PostUsersserviceV2LoginBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post usersservice v2 login body based on context it is used
func (o *PostUsersserviceV2LoginBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUsersserviceV2LoginBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUsersserviceV2LoginBody) UnmarshalBinary(b []byte) error {
	var res PostUsersserviceV2LoginBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostUsersserviceV2LoginOKBody post usersservice v2 login o k body
swagger:model PostUsersserviceV2LoginOKBody
*/
type PostUsersserviceV2LoginOKBody struct {

	// access token
	AccessToken string `json:"accessToken,omitempty"`
}

// Validate validates this post usersservice v2 login o k body
func (o *PostUsersserviceV2LoginOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post usersservice v2 login o k body based on context it is used
func (o *PostUsersserviceV2LoginOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostUsersserviceV2LoginOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostUsersserviceV2LoginOKBody) UnmarshalBinary(b []byte) error {
	var res PostUsersserviceV2LoginOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
